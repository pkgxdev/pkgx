name: CI·sync

on:
  pull_request:
    paths:
      - import-map.json
      - src/hooks/app.sync.ts
      - src/hooks/useSync.ts
      - src/prefab/install.ts
      - .github/workflows/ci.sync.yml

concurrency:
  group: ${{ github.ref }}/sync
  cancel-in-progress: true

jobs:
  # in situations without `git` we had a softlock problem that we're testing for here
  test-sync-lock:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
          - runner: macos-latest
          - runner: ubuntu-latest
            container: debian:buster-slim
            # ^^ no git
    container: ${{ matrix.platform.container }}
    name: test sync-lock (${{ matrix.platform.container || matrix.platform.runner }})
    steps:
      # denoland/setup requires `unzip` to be installed
      # https://github.com/denoland/setup-deno/issues/41
      - name: ensure `unzip`
        run: |
          case "${{ matrix.platform.container }}" in
          debian:buster-slim)
            apt-get update && apt-get install unzip;;
          archlinux:latest)
            pacman -Sy --noconfirm unzip;;
          esac

      - uses: actions/checkout@v3
      - uses: ./.github/actions/cache  # avoids sporadic 500s from deno’s CDN
      - uses: denoland/setup-deno@v1

      - run: deno task --config $GITHUB_WORKSPACE/deno.jsonc compile
        working-directory: /usr/local/bin

      - name: test sync-lock
        run: |
          set -o pipefail
          tea -S +gnu.org/wget wget -L tea.xyz/white-paper/ | tea -S +charm.sh/glow glow -
        shell: bash

      # run again to test this work in the “update” scenario
      - name: test sync-lock again
        run: |
          set -o pipefail
          tea -S +gnu.org/wget wget -L tea.xyz/white-paper/ | tea -S +charm.sh/glow glow -
        shell: bash

  test-double-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/cache  # avoids sporadic 500s from deno’s CDN
      - uses: denoland/setup-deno@v1

      - run: deno task --config $GITHUB_WORKSPACE/deno.jsonc compile
        working-directory: /usr/local/bin

      - run: tea -S
      - run: |
          set -o pipefail
          tea +deno.land | tea +deno.land cat
