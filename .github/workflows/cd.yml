name: CD

on:
  push:
    branches:
      - main
    paths:
      - README.md
      - .github/workflows/cd.yml
  workflow_dispatch:

concurrency:
  group: distribute
  cancel-in-progress: true

env:
  VERBOSE: 1

jobs:
  check:
    permissions:
      contents: read
      actions: write  # for cancel-action
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      commence: ${{ steps.rev-parse.outputs.result == 'commence' }}
    steps:
      - uses: actions/checkout@v3

      - uses: teaxyz/setup@v0

      - id: extract
        name: determine current version
        run: |
          source <(tea -Eds)
          echo "::set-output name=version::$VERSION"
          if test x$VERSION = x; then exit 1; fi
        env:
          VERBOSE: 0

      - id: rev-parse
        name: did we already publish this version?
        run: |
          # fetch tags since actions/checkout is a shallow checkout
          git fetch --prune --unshallow --tags

          if git show-ref --tags v${{ steps.extract.outputs.version }} --quiet; then
            echo "::set-output name=result::cancel"
          else
            echo "::set-output name=result::commence"
          fi

      - uses: andymckay/cancel-action@0.2
        if: ${{ steps.rev-parse.outputs.result == 'cancel' }}

  ci:
    needs: [check]
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  # we compile here so we can attach binaries to the release itself
  # we do this because people expect that, and will be confused otherwise
  # and we want people to be able to just grab the single binaries as
  # they wish
  compile:
    needs: [ci]
    permissions:
      contents: read
      actions: write
    strategy:
      matrix:
        platform:
        - os: macos-11
          build-id: darwin+x86-64
        - os: ubuntu-latest
          build-id: linux+x86-64
        - os: [self-hosted, macOS, ARM64]
          build-id: darwin+aarch64
        - os: [self-hosted, linux, ARM64]
          build-id: linux+aarch64
    runs-on: ${{ matrix.platform.os }}
    name: ${{ matrix.platform.build-id }}
    steps:
      - uses: actions/checkout@v3

      - uses: teaxyz/setup@v0
        id: tea
        with:
          # because linux self-hosted image doesnâ€™t have git
          srcroot: ${{ github.workspace }}

      - run: sed -i.bak "s/^const version = .*$/const version = \"${{ steps.tea.outputs.version }}\"/" src/app.ts
      - run: tea compile ./tea
      - run: tar cJf tea-${{ steps.tea.outputs.version }}+${{ matrix.platform.build-id }}.tar.xz ./tea
      - uses: actions/upload-artifact@v3
        with:
          name: tarballs
          path: tea-${{ steps.tea.outputs.version }}+${{ matrix.platform.build-id }}.tar.xz
          if-no-files-found: error
      - run: mv ./tea tea-${{ matrix.platform.build-id }}
      - uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: tea-${{ matrix.platform.build-id }}
          if-no-files-found: error

  bundle-src:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - uses: actions/checkout@v3
        with:
          path: tea
      - uses: teaxyz/setup@v0
        id: tea
        with:
          srcroot: tea
      - run: sed -i.bak "s/^const version = .*$/const version = \"${{ steps.tea.outputs.version }}\"/" src/app.ts
        working-directory: tea
      - run: mv tea tea-${{ steps.tea.outputs.version }}
      - run: tar cJf tea-${{ steps.tea.outputs.version }}.tar.xz ./tea-${{ steps.tea.outputs.version }}
      - uses: actions/upload-artifact@v3
        with:
          name: tarballs
          path: tea-${{ steps.tea.outputs.version }}.tar.xz
          if-no-files-found: error

  release:
    permissions:
      contents: write
    needs: [check, compile, bundle-src]
    runs-on: ubuntu-latest
    env:
      TAG: v${{ needs.check.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: tarballs
          path: artifacts

      - run: |
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      - uses: mikepenz/release-changelog-builder-action@v3
        id: build_changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          files: artifacts/*
          body_path: ${{ steps.build_changelog.outputs.changelog }}
          fail_on_unmatched_files: true

  upload-binaries:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: binaries
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: |
          aws s3 sync binaries s3://www.tea.xyz/ \
            --metadata-directive REPLACE \
            --cache-control no-cache,must-revalidate
      - name: Invalidate cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID }} \
            --paths /binaries/*
